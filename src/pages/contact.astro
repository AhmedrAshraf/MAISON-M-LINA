---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import { maisons } from '../data/maisons';

// Cette fonction sera appelée côté serveur pour traiter le formulaire
export const prerender = false;

if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();
    const name = data.get('name');
    const email = data.get('email');
    const telephone = data.get('telephone');
    const subject = data.get('subject');
    const message = data.get('message');
    const selectedMaisons = data.getAll('maisons');
    const captchaResponse = data.get('g-recaptcha-response');

    // Vérifier le captcha (à implémenter avec votre clé secrète)
    const verifyCaptcha = async (token) => {
      const response = await fetch('https://www.google.com/recaptcha/api/siteverify', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        // body: `secret=VOTRE_CLE_SECRETE&response=${token}`
		body: `secret=6LfVpf4qAAAAAC6iT6yTj0PLI8kQduJc_QYrjl5C&response=${token}`
      });
      return await response.json();
    };

    const captchaResult = await verifyCaptcha(captchaResponse);

    if (!captchaResult.success) {
      throw new Error('Captcha invalide');
    }

    return Astro.redirect('/contact?success=true');
  } catch (error) {
    return Astro.redirect('/contact?error=' + encodeURIComponent(error.message));
  }
}

const success = Astro.url.searchParams.get('success');
const error = Astro.url.searchParams.get('error');
const preselectedSubject = Astro.url.searchParams.get('sujet');
const preselectedMaison = Astro.url.searchParams.get('maison');
---

<Layout title="Contact - MAISON MÉLINA">
	<main>
		<Hero 
			title="CONTACTEZ-NOUS"
			subtitle="Nous sommes à votre écoute pour répondre à toutes vos questions"
		/>

		{success && (
			<div class="alert success" role="alert">
				Votre message a été envoyé avec succès. Nous vous répondrons dans les plus brefs délais.
			</div>
		)}

		{error && (
			<div class="alert error" role="alert">
				Une erreur est survenue : {error}
			</div>
		)}

		<div class="contact-container">
			<div class="contact-info">
				<h2>Nos Coordonnées</h2>
				<div class="info-item">
					<strong>Téléphone :</strong>
					<p class="contact-detail">04 51 26 29 59</p>
				</div>
				<div class="info-item">
					<strong>Email :</strong>
					<p class="contact-detail">
						<span id="email-protected" class="email-protected">Cliquez pour afficher l'email</span>
					</p>
				</div>
				<div class="social-links">
					<a href="https://www.facebook.com/maison.melina/" class="social-link" aria-label="Facebook" target="_blank" rel="noopener noreferrer">
						<i class="fab fa-facebook-f" aria-hidden="true"></i>
						<span class="social-text">Suivre sur Facebook</span>
					</a>
					<a href="https://www.instagram.com/maisons.melina" class="social-link" aria-label="Instagram" target="_blank" rel="noopener noreferrer">
						<i class="fab fa-instagram" aria-hidden="true"></i>
						<span class="social-text">Suivre sur Instagram</span>
					</a>
					<a href="https://www.linkedin.com/company/maison-melina" class="social-link" aria-label="LinkedIn" target="_blank" rel="noopener noreferrer">
						<i class="fab fa-linkedin-in" aria-hidden="true"></i>
						<span class="social-text">Suivre sur LinkedIn</span>
					</a>
				</div>
			</div>

			<div class="contact-form">
				<h2>Formulaire de Contact</h2>
				<form method="POST" id="contactForm">
					<div class="form-group">
						<label for="name">Nom complet *</label>
						<input type="text" id="name" name="name" required aria-required="true">
					</div>

					<div class="form-group">
						<label for="email">Email *</label>
						<input type="email" id="email" name="email" required aria-required="true">
					</div>

					<div class="form-group">
						<label for="telephone">Téléphone *</label>
						<input type="tel" id="telephone" name="telephone" placeholder="Ex: 06 12 34 56 78" required aria-required="true">
					</div>

					<div class="form-group">
						<label for="subject">Sujet *</label>
						<select id="subject" name="subject" required aria-required="true">
							<option value="">Choisissez un sujet</option>
							<option value="information" selected={preselectedSubject === 'information'}>Demande d'informations</option>
							<option value="visite" selected={preselectedSubject === 'visite'}>Demande de visite</option>
							<option value="projet" selected={preselectedSubject === 'projet'}>Projet de maison partagée</option>
							<option value="autre" selected={preselectedSubject === 'autre'}>Autre</option>
						</select>
					</div>

					<div class="form-group maisons-selection" id="maisonsSelection" style={preselectedSubject === 'visite' ? 'display: block;' : 'display: none;'}>
						<fieldset>
							<legend>Maisons concernées (plusieurs choix possibles) *</legend>
							<div class="maisons-checkboxes">
								{maisons.map((maison) => (
									<div class="maison-checkbox">
										<input 
											type="checkbox" 
											id={`maison-${maison.id}`} 
											name="maisons" 
											value={maison.id}
											checked={preselectedMaison === maison.id.toString()}
										>
										<label for={`maison-${maison.id}`}>{maison.nom}</label>
									</div>
								))}
							</div>
						</fieldset>
					</div>

					<div class="form-group">
						<label for="message">Message*</label>
						<textarea id="message" name="message" rows="5" required aria-required="true"></textarea>
					</div>

					<div class="form-group captcha-container">
						<div class="g-recaptcha" data-sitekey="6LfVpf4qAAAAAJQ66RwLvfhljfZN1DnTGA_m0c_C"></div>
						{/* <div class="g-recaptcha" data-sitekey="VOTRE_CLE_PUBLIQUE"></div> */}
					</div>

					<button type="submit" class="submit-button">Envoyer le message</button>
				</form>
			</div>
		</div>
	</main>
</Layout>

<script is:inline src="https://www.google.com/recaptcha/api.js" async defer></script>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const subjectSelect = document.getElementById('subject');
		const maisonsSelection = document.getElementById('maisonsSelection');
		
		// Protection de l'email
		const emailProtected = document.getElementById('email-protected');
		if (emailProtected) {
			const emailParts = ['contact', '@', 'maison-melina', '.', 'fr'];
			emailProtected.addEventListener('click', function() {
				const email = emailParts.join('');
				this.textContent = email;
				this.style.cursor = 'text';
				this.classList.add('revealed');
			});
			emailProtected.style.cursor = 'pointer';
		}

		// Fonction pour afficher/masquer la sélection des maisons
		function toggleMaisonsSelection() {
			if (subjectSelect.value === 'visite') {
				maisonsSelection.style.display = 'block';
				// Rendre au moins une case obligatoire
				const checkboxes = maisonsSelection.querySelectorAll('input[type="checkbox"]');
				checkboxes.forEach(checkbox => {
					checkbox.addEventListener('change', validateCheckboxes);
				});
			} else {
				maisonsSelection.style.display = 'none';
			}
		}
		
		// Validation pour s'assurer qu'au moins une maison est sélectionnée
		function validateCheckboxes() {
			const checkboxes = maisonsSelection.querySelectorAll('input[type="checkbox"]');
			let checked = false;
			
			checkboxes.forEach(checkbox => {
				if (checkbox.checked) {
					checked = true;
				}
			});
			
			checkboxes.forEach(checkbox => {
				if (checked) {
					checkbox.setCustomValidity('');
				} else {
					checkbox.setCustomValidity('Veuillez sélectionner au moins une maison');
				}
			});
		}
		
		// Écouter les changements sur le select
		subjectSelect.addEventListener('change', toggleMaisonsSelection);
		
		// Vérifier l'état initial
		toggleMaisonsSelection();
		
		// Validation du formulaire
		const form = document.getElementById('contactForm');
		form.addEventListener('submit', function(e) {
			console.log("working")
			if (subjectSelect.value === 'visite') {
				const checkboxes = maisonsSelection.querySelectorAll('input[type="checkbox"]');
				let checked = false;
				
				checkboxes.forEach(checkbox => {
					if (checkbox.checked) {
						checked = true;
					}
				});
				
				if (!checked) {
					e.preventDefault();
					alert('Veuillez sélectionner au moins une maison pour votre demande de visite.');
				}
			}
		});

		// Amélioration de l'accessibilité des formulaires
		const formInputs = document.querySelectorAll('input, select, textarea');
		formInputs.forEach(input => {
			input.addEventListener('invalid', function() {
				this.setAttribute('aria-invalid', 'true');
			});
			
			input.addEventListener('input', function() {
				if (this.validity.valid) {
					this.removeAttribute('aria-invalid');
				}
			});
		});
	});

      document.getElementById("contactForm").addEventListener("submit", function(event) {
    event.preventDefault();

    // Get all selected maison checkboxes
    const selectedMaisons = [];
    document.querySelectorAll('input[name="maisons"]:checked').forEach(checkbox => {
        selectedMaisons.push(checkbox.value);
    });

    let formData = {
        name: document.getElementById("name").value,
        email: document.getElementById("email").value,
        telephone: document.getElementById("telephone").value,
        subject: document.getElementById("subject").value,
        message: document.getElementById("message").value,
        maisons: selectedMaisons 
    };
	fetch("https://maison-m-lina-server.vercel.app/api/send-email", {
    // fetch("http://localhost:8000/api/send-email", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message);
		document.getElementById("name").value = "";
		document.getElementById("email").value = "";
		document.getElementById("telephone").value = "";
		document.getElementById("subject").value = "";
		document.getElementById("message").value = "";
    })
    .catch(error => {
        console.error("Error:", error);
    });
});


</script>

<style>
	main {
		max-width: 1200px;
		margin: 0 auto;
		padding: 2rem;
	}

	.alert {
		padding: 1rem;
		border-radius: 0.5rem;
		margin-bottom: 2rem;
		text-align: center;
	}

	.alert.success {
		background-color: #d4edda;
		color: #155724;
		border: 1px solid #c3e6cb;
	}

	.alert.error {
		background-color: #f8d7da;
		color: #721c24;
		border: 1px solid #f5c6cb;
	}

	.contact-container {
		display: grid;
		grid-template-columns: 1fr 2fr;
		gap: 2rem;
		margin-top: 2rem;
	}

	.contact-info {
		background: white;
		padding: 2rem;
		border-radius: 0.5rem;
		box-shadow: 0 2px 4px rgba(0,0,0,0.1);
	}

	.info-item {
		margin-bottom: 1.5rem;
	}

	.info-item strong {
		display: block;
		color: var(--primary-color);
		margin-bottom: 0.5rem;
	}

	.contact-detail {
		text-decoration: none;
		color: var(--text-color);
	}

	.email-protected {
		cursor: pointer;
		color: var(--primary-color);
	}

	.email-protected.revealed {
		color: var(--text-color);
	}

	.social-links {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		margin-top: 2rem;
	}

	.social-link {
		display: flex;
		align-items: center;
		padding: 1rem;
		background-color: var(--primary-color);
		color: white;
		border-radius: 0.5rem;
		text-decoration: none;
		transition: all 0.3s ease;
	}

	.social-link i {
		font-size: 1.2rem;
		margin-right: 1rem;
		width: 20px;
		text-align: center;
	}

	.social-text {
		font-weight: bold;
	}

	.social-link:hover {
		background-color: var(--secondary-color);
		transform: translateY(-2px);
	}

	.contact-form {
		background: white;
		padding: 2rem;
		border-radius: 0.5rem;
		box-shadow: 0 2px 4px rgba(0,0,0,0.1);
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	label {
		display: block;
		margin-bottom: 0.5rem;
		color: var(--text-color);
	}

	input,
	select,
	textarea {
		width: 100%;
		padding: 0.75rem;
		border: 1px solid #e2e8f0;
		border-radius: 0.5rem;
		font-size: 1rem;
		transition: border-color 0.3s ease;
	}

	input:focus,
	select:focus,
	textarea:focus {
		outline: none;
		border-color: var(--primary-color);
		box-shadow: 0 0 0 3px rgba(180, 44, 45, 0.2);
	}

	input[aria-invalid="true"],
	select[aria-invalid="true"],
	textarea[aria-invalid="true"] {
		border-color: #dc3545;
		background-color: #fff8f8;
	}

	fieldset {
		border: none;
		padding: 0;
		margin: 0;
	}

	legend {
		font-weight: bold;
		margin-bottom: 0.5rem;
		color: var(--text-color);
	}

	.captcha-container {
		display: flex;
		justify-content: center;
	}

	.submit-button {
		background-color: var(--primary-color);
		color: white;
		padding: 1rem 2rem;
		border: none;
		border-radius: 0.5rem;
		font-size: 1rem;
		font-weight: bold;
		cursor: pointer;
		transition: background-color 0.3s ease;
		width: 100%;
	}

	.submit-button:hover {
		background-color: var(--secondary-color);
	}

	.maisons-checkboxes {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
		gap: 0.75rem;
		margin-top: 0.5rem;
	}

	.maison-checkbox {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.maison-checkbox input[type="checkbox"] {
		width: auto;
		margin-right: 0.5rem;
		cursor: pointer;
	}

	.maison-checkbox label {
		margin-bottom: 0;
		cursor: pointer;
		font-size: 0.95rem;
	}

	@media (max-width: 768px) {
		.contact-container {
			grid-template-columns: 1fr;
		}

		.contact-info,
		.contact-form {
			padding: 1.5rem;
		}

		.social-links {
			gap: 0.75rem;
		}

		.social-link {
			padding: 0.75rem;
		}

		.maisons-checkboxes {
			grid-template-columns: 1fr;
		}
	}
</style>